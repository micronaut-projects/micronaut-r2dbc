dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    compileOnly "org.graalvm.nativeimage:svm"
    api platform("io.r2dbc:r2dbc-bom:$r2dbcVersion")
    api "io.micronaut:micronaut-inject"
    api "io.micronaut:micronaut-validation"
    api "io.r2dbc:r2dbc-spi"

    testImplementation("org.spockframework:spock-core:${spockVersion}") {
        exclude module:'groovy-all'
    }
    testImplementation("io.reactivex.rxjava2:rxjava")
    testImplementation "io.micronaut.test:micronaut-test-spock:$micronautTestVersion"
    testImplementation "org.testcontainers:r2dbc"

    // mariadb
    testImplementation 'org.mariadb:r2dbc-mariadb:1.0.1'
    testImplementation "org.testcontainers:mariadb"
    testImplementation 'org.mariadb.jdbc:mariadb-java-client'

    // mysql
    testImplementation "org.testcontainers:mysql"
    testImplementation 'mysql:mysql-connector-java'
    testImplementation 'dev.miku:r2dbc-mysql'

    // h2
    testImplementation 'io.r2dbc:r2dbc-h2'

    // sqlserver
    testImplementation "org.testcontainers:mssqlserver"
    testImplementation 'com.microsoft.sqlserver:mssql-jdbc'
    testImplementation 'io.r2dbc:r2dbc-mssql'

    // postgres
    testImplementation 'io.r2dbc:r2dbc-postgresql'
    testImplementation "org.testcontainers:postgresql"
    testImplementation 'org.postgresql:postgresql'

}

tasks.withType(Test) {
    useJUnitPlatform()
}
