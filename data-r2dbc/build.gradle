configurations.all {
    resolutionStrategy {
        eachDependency { DependencyResolveDetails details ->
            //specifying a fixed version for all libraries with 'org.gradle' group
            if (details.requested.group == 'io.projectreactor') {
                details.useVersion reactorVersion
            }
        }
    }
}
dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    annotationProcessor "io.micronaut:micronaut-graal:$micronautVersion"
    annotationProcessor "io.micronaut.docs:micronaut-docs-asciidoc-config-props:$micronautDocsVersion"
    implementation "io.micronaut.reactor:micronaut-reactor"
    implementation "io.projectreactor.netty:reactor-netty:1.0.3"
    api "io.projectreactor:reactor-core:$reactorVersion"
    api "io.micronaut.data:micronaut-data-jdbc:$micronautDataVersion"
    api "io.micronaut.data:micronaut-data-model:$micronautDataVersion"
    implementation "io.micronaut:micronaut-http:$micronautVersion"
    api project(":r2dbc-core")
    api "io.r2dbc:r2dbc-spi"

    testImplementation "io.micronaut.data:micronaut-data-tck:$micronautDataVersion"
    testImplementation("org.spockframework:spock-core:${spockVersion}") {
        exclude module:'groovy-all'
    }
    testImplementation "io.micronaut.test:micronaut-test-spock:$micronautTestVersion"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    testAnnotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    testCompileOnly "io.micronaut:micronaut-inject-groovy:$micronautVersion"
    testCompileOnly "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.12.1"
    testImplementation "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceVersion"
    testImplementation "org.codehaus.groovy:groovy-sql:$groovyVersion"
    testImplementation "io.micronaut:micronaut-validation:$micronautVersion"
    testImplementation platform('org.testcontainers:testcontainers-bom:1.15.1')
    testImplementation "org.testcontainers:r2dbc"

    // mariadb
    testImplementation 'org.mariadb:r2dbc-mariadb:1.0.0'
    testImplementation "org.testcontainers:mariadb"
    testImplementation 'org.mariadb.jdbc:mariadb-java-client'

    // mysql
    testImplementation "org.testcontainers:mysql"
    testImplementation 'mysql:mysql-connector-java'
    testImplementation 'dev.miku:r2dbc-mysql'

    // h2
    testImplementation 'io.r2dbc:r2dbc-h2'

    // sqlserver
    testImplementation "org.testcontainers:mssqlserver"
    testImplementation 'com.microsoft.sqlserver:mssql-jdbc'
    testImplementation 'io.r2dbc:r2dbc-mssql'

    // postgres
    testImplementation 'io.r2dbc:r2dbc-postgresql'
    testImplementation "org.testcontainers:postgresql"
    testImplementation 'org.postgresql:postgresql'
}

test {
    systemProperty "oracle.jdbc.timezoneAsRegion", "false"
}

micronautBuild {
    resolutionStrategy {
        componentSelection {
            all { selection ->
                if (selection.candidate.module == 'mssql-jdbc' && !selection.candidate.version.contains("jre8")) {
                    selection.reject("Not a JDK8 compatible MS SQL driver")
                }
            }
        }
    }
}
