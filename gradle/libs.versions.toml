[versions]
micronaut = "4.0.0"
micronaut-platform = "4.0.0-RC1"
micronaut-docs = "2.0.0"

micronaut-reactor = "3.0.0"
micronaut-rxjava2 = "2.0.1"
micronaut-serde = "2.0.0"
micronaut-test = "4.0.0"
micronaut-kotlin = "4.0.0"
micronaut-data = "4.0.1"
micronaut-sql = "5.0.0"
micronaut-flyway = "6.0.0"
micronaut-validation = "4.0.0"
micronaut-logging = "1.0.0"

groovy = "4.0.13"
managed-testcontainers = "1.18.3"

# R2DBC Drivers

managed-r2dbc = "1.0.0.RELEASE"
managed-r2dbc-pool = "1.0.1.RELEASE"

managed-r2dbc-oracle = "1.1.1"
managed-r2dbc-mysql = "0.8.2.RELEASE"
managed-r2dbc-io-asyncer-mysql = "1.0.2"
managed-r2dbc-h2 = "1.0.0.RELEASE"
managed-r2dbc-mariadb = "1.1.4"
managed-r2dbc-postgresql = "1.0.2.RELEASE"
managed-r2dbc-mssql = "1.0.0.RELEASE"

# Gradle plugins

micronaut-gradle-plugin = "4.0.0-M8"
micronaut-testresources = "2.0.0"
kotlin-gradle-plugin = "1.9.0"

[libraries]
# Core
micronaut-core = { module = 'io.micronaut:micronaut-core-bom', version.ref = 'micronaut' }

# BOMS
micronaut-reactor = { module = 'io.micronaut.reactor:micronaut-reactor-bom', version.ref = "micronaut-reactor" }
micronaut-rxjava2 = { module = 'io.micronaut.rxjava2:micronaut-rxjava2-bom', version.ref = "micronaut-rxjava2" }
micronaut-kotlin = { module = 'io.micronaut.kotlin:micronaut-kotlin-bom', version.ref = "micronaut-kotlin" }
micronaut-serde = { module = "io.micronaut.serde:micronaut-serde-bom", version.ref = "micronaut-serde" }
micronaut-data = { module = "io.micronaut.data:micronaut-data-bom", version.ref = "micronaut-data" }
micronaut-sql = { module = "io.micronaut.sql:micronaut-sql-bom", version.ref = "micronaut-sql" }
micronaut-flyway = { module = "io.micronaut.flyway:micronaut-flyway-bom", version.ref = "micronaut-flyway" }
micronaut-validation = { module = "io.micronaut.validation:micronaut-validation-bom", version.ref = "micronaut-validation" }
micronaut-logging = { module = "io.micronaut.logging:micronaut-logging-bom", version.ref = "micronaut-logging" }

boms-testcontainers = { module = "org.testcontainers:testcontainers-bom", version.ref = "managed-testcontainers" }

# R2DBC API

managed-r2dbc-spi = { module = "io.r2dbc:r2dbc-spi", version.ref = "managed-r2dbc" }
managed-r2dbc-pool = { module = "io.r2dbc:r2dbc-pool", version.ref = "managed-r2dbc-pool" }

# R2DBC Drivers
managed-r2dbc-h2 = { module = "io.r2dbc:r2dbc-h2", version.ref = "managed-r2dbc-h2" }
managed-r2dbc-oracle = { module = "com.oracle.database.r2dbc:oracle-r2dbc", version.ref = "managed-r2dbc-oracle" }
managed-r2dbc-mariadb = { module = "org.mariadb:r2dbc-mariadb", version.ref = "managed-r2dbc-mariadb" }
managed-r2dbc-mysql = { module = "dev.miku:r2dbc-mysql", version.ref = "managed-r2dbc-mysql" }
managed-r2dbc-io-asyncer-mysql = { module = "io.asyncer:r2dbc-mysql", version.ref = "managed-r2dbc-io-asyncer-mysql" }
managed-r2dbc-mssql = { module = "io.r2dbc:r2dbc-mssql", version.ref = "managed-r2dbc-mssql" }
managed-r2dbc-postgresql = { module = "org.postgresql:r2dbc-postgresql", version.ref = "managed-r2dbc-postgresql" }

flyway-mysql = { module = "org.flywaydb:flyway-mysql" }

testcontainers-jdbc = { module = "org.testcontainers:jdbc" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter" }
testcontainers-mariadb = { module = "org.testcontainers:mariadb" }
testcontainers-mssqlserver = { module = "org.testcontainers:mssqlserver" }
testcontainers-mysql = { module = "org.testcontainers:mysql" }
testcontainers-oracle = { module = "org.testcontainers:oracle-xe" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql" }
testcontainers-r2dbc = { module = "org.testcontainers:r2dbc" }
testcontainers-spock = { module = "org.testcontainers:spock" }

junit-platform-engine = { module = "org.junit.platform:junit-platform-suite-engine" }
# Testresources

micronaut-testresources-client = { module = 'io.micronaut.testresources:micronaut-test-resources-client', version.ref = "micronaut-testresources" }

# Gradle

gradle-micronaut = { module = "io.micronaut.gradle:micronaut-gradle-plugin", version.ref = "micronaut-gradle-plugin" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-gradle-plugin" }
gradle-kotlin-allopen = { module = "org.jetbrains.kotlin:kotlin-allopen", version.ref = "kotlin-gradle-plugin" }
gradle-kotlin-noarg = { module = "org.jetbrains.kotlin:kotlin-noarg", version.ref = "kotlin-gradle-plugin" }

